# coding=utf-8

# \转义,让特殊字符不被解析，而是原样输出
print 'I\'m Ok'

#Python还允许用r''表示''内部的字符串默认不转义
print '\\\t\\'

print r'\\\t\\'

#Python允许用'''...'''的格式表示多行内容
print '''line1
line2
line3'''

# 与运算and, 布尔值True ,False(严格区分大小写)
print True and False  # 输出False

# 或运算or
print True or False # 输出True

# 非运算not,单目运算符
print not False  # 输出True

# None不能理解为0，因为0是有意义的，而None是一个特殊的空值(严格区分大小写)
print None

# python是动态语言,不需要声明变量类型
# 变量
# 理解变量在计算机内存中的表示也非常重要
a = 'ABC'
# Python解释器干了两件事情：
# 在内存中创建了一个'ABC'的字符串；
# 在内存中创建了一个名为a的变量，并把它指向'ABC'。


# 常量
# 所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，通常用全部大写的变量名表示常量：
PI = 3.14159265359
# 但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。

# 特殊的整数运算
print 10/3   # 结果是3
# 你没有看错，整数除法永远是整数，即使除不尽。要做精确的除法，只需把其中一个整数换成浮点数做除法就可以：
print 10.0/3
# 因为整数除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数：
print 10%3
# 无论整数做除法还是取余数，结果永远是整数，所以，整数运算结果永远是精确的。